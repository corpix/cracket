diff --git mime-type-lib/mime-type.rkt mime-type-lib/mime-type.rkt
index cf945a4..c20935c 100644
--- mime-type-lib/mime-type.rkt
+++ mime-type-lib/mime-type.rkt
@@ -11,22 +11,91 @@
   [register-mime-type! (-> symbol? (or/c string? bytes?) void?)]
   [path-mime-type (-> (or/c path? path-string?) (or/c #f bytes?))]))
 
-(define-runtime-path mime.types-path "mime.types")
-
 (define types
-  (let ([types (make-hasheqv)])
-    (begin0 types
-      (call-with-input-file mime.types-path
-        (lambda (in)
-          (for ([line (in-lines in)])
-            (match line
-              [(regexp #rx"^ *#") (void)]
-              [(regexp #rx"^([^ ]+) +(.+)$" (list _ mime exts))
-               (define mime-bs (string->bytes/utf-8 mime))
-               (for ([ext (in-list (string-split exts))])
-                 (hash-set! types (string->symbol ext) mime-bs))]
-              [_
-               (log-warning "mime-types: failed to parse line ~s" line)])))))))
+  (let ([table (make-hasheqv)]
+        [types-to-exts '((text/html html htm shtml)
+                         (text/css css)
+                         (text/xml xml)
+                         (image/gif gif)
+                         (image/jpeg jpeg jpg)
+                         (application/javascript js)
+                         (application/atom+xml atom)
+                         (application/rss+xml rss)
+                         (text/mathml mml)
+                         (text/plain txt)
+                         (text/vnd.sun.j2me.app-descriptor jad)
+                         (text/vnd.wap.wml wml)
+                         (text/x-component htc)
+                         (image/png png)
+                         (image/tiff tif tiff)
+                         (image/vnd.wap.wbmp wbmp)
+                         (image/x-icon ico)
+                         (image/x-jng jng)
+                         (image/x-ms-bmp bmp)
+                         (image/svg+xml svg svgz)
+                         (image/webp webp)
+                         (application/font-woff woff)
+                         (application/java-archive jar war ear)
+                         (application/json json)
+                         (application/mac-binhex40 hqx)
+                         (application/msword doc)
+                         (application/pdf pdf)
+                         (application/postscript ps eps ai)
+                         (application/rtf rtf)
+                         (application/vnd.apple.mpegurl m3u8)
+                         (application/vnd.ms-excel xls)
+                         (application/vnd.ms-fontobject eot)
+                         (application/vnd.ms-powerpoint ppt)
+                         (application/vnd.wap.wmlc wmlc)
+                         (application/vnd.google-earth.kml+xml kml)
+                         (application/vnd.google-earth.kmz kmz)
+                         (application/x-7z-compressed 7z)
+                         (application/x-cocoa cco)
+                         (application/x-java-archive-diff jardiff)
+                         (application/x-java-jnlp-file jnlp)
+                         (application/x-makeself run)
+                         (application/x-perl pl pm)
+                         (application/x-pilot prc pdb)
+                         (application/x-rar-compressed rar)
+                         (application/x-redhat-package-manager rpm)
+                         (application/x-sea sea)
+                         (application/x-shockwave-flash swf)
+                         (application/x-stuffit sit)
+                         (application/x-tcl tcl tk)
+                         (application/x-x509-ca-cert der pem crt)
+                         (application/x-xpinstall xpi)
+                         (application/xhtml+xml xhtml)
+                         (application/xspf+xml xspf)
+                         (application/zip zip)
+                         (application/gzip gz)
+                         (application/octet-stream bin exe dll)
+                         (application/octet-stream deb)
+                         (application/octet-stream dmg)
+                         (application/octet-stream iso img)
+                         (application/octet-stream msi msp msm)
+                         (audio/midi mid midi kar)
+                         (audio/mpeg mp3)
+                         (audio/ogg ogg)
+                         (audio/x-m4a m4a)
+                         (audio/x-realaudio ra)
+                         (text/javascript mjs)
+                         (video/3gpp 3gpp 3gp)
+                         (video/mp2t ts)
+                         (video/mp4 mp4)
+                         (video/mpeg mpeg mpg)
+                         (video/quicktime mov)
+                         (video/webm webm)
+                         (video/x-flv flv)
+                         (video/x-m4v m4v)
+                         (video/x-mng mng)
+                         (video/x-ms-asf asx asf)
+                         (video/x-ms-wmv wmv)
+                         (video/x-msvideo avi))])
+    (begin0 table
+      (for ([type-to-exts (in-list types-to-exts)])
+        (let ([type-bs (string->bytes/utf-8 (symbol->string (car type-to-exts)))])
+          (for ([ext (in-list (cdr type-to-exts))])
+            (hash-set! table ext type-bs)))))))
 
 (define (register-mime-type! ext mime)
   (hash-set! types ext (if (string? mime)
